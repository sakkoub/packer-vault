stages:
  - build
  - deploy

image: 
  name: hashicorp/terraform
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

stages:
  - validate
  - build 
  - verify
  - gettools
before_script:
  - alias convert_report="jq -r '([.resource_changes[]?.change.actions?]|flatten)|{\"create\":(map(select(.==\"create\"))|length),\"update\":(map(select(.==\"update\"))|length),\"delete\":(map(select(.==\"delete\"))|length)}'"
  - terraform --version
  # - apt update && apt install  --assume-yes git wget unzip
  # - git config --global http.sslVerify false 
  

validate:
  stage: validate
  script:
    - terraform validate -var-file=modules/private-tls-cert/variables.tf



get_packer:
  stage: gettools 
  when: manual
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - packer
  script:
    - echo "Download packer"
    - wget https://releases.hashicorp.com/packer/1.5.5/packer_1.5.5_linux_amd64.zip
    - unzip packer_1.5.5_linux_amd64.zip
    - chmod +x packer 

create_tls:
  when: manual
  stage: build
  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - vault.crt.pem
      - ca.crt.pem
      - vault.key.pem
  script:
    - touch testfile
    - mkdir /etc/tls
    - mkdir /generatedcerts
    - cd modules/private-tls-cert
    - terraform init 
    - terraform plan 
    - terraform apply -auto-approve
    - cd ../../
    - cp /generatedcerts/* .
    - pwd && ls -la

print_tls:
  when: manual
  stage: verify
  script:
    - cat vault.crt.pem
    - cat ca.crt.pem

    
  
build_image:
  stage: build
  when: manual
  script:
    - ./packer  build packerrun.json
